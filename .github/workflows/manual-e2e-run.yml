name: Manual E2E Runner

on:
  workflow_dispatch:
          name: manual-playwright-report
          path: |
            playwright-report/**
            test-results/**
          if-no-files-found: warn
        default: 'feature/PESC-008-search'

jobs:
  run-e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d testdb"
          --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout specified ref
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Set DATABASE_URL
        run: echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/testdb?schema=public" >> $GITHUB_ENV

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            pg_isready -h localhost -p 5432 -U postgres && break || sleep 1
          done
        env:
          PGPASSWORD: postgres

      - name: Run Prisma deploy (db push)
        run: npx prisma db push --accept-data-loss

      - name: Run deterministic seed
        run: |
          set -euo pipefail
          if npm run -s --if-present seed:places; then
            echo "npm seed ran"
          else
            npx tsx prisma/seed-places.ts
          fi

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Build Next.js app
        run: |
          npm run build

      - name: Start Next.js app
        run: |
          NODE_ENV=production npm run start &
          for i in {1..30}; do
            if curl -sS http://localhost:3000 > /dev/null; then
              echo "server ready"; break
            fi
            sleep 1
          done

      - name: Run Playwright tests
        run: npx playwright test --reporter=list --reporter=html --reporter=junit

      - name: Debug: recursive workspace listing
        run: |
          echo '--- recursive ls (truncated) ---'
          mkdir -p ci-debug
          ls -laR . | sed -n '1,400p' > ci-debug/recursive-ls.txt || true

      - name: Debug: print head of recursive listing to job log
        run: |
          echo '--- recursive ls head (job log) ---'
          head -n 200 ci-debug/recursive-ls.txt || true

      - name: Upload debug listing artifact
        uses: actions/upload-artifact@v4
        with:
          name: ci-debug
          path: ci-debug/recursive-ls.txt
          if-no-files-found: warn

      - name: Debug: list playwright-report and test-results
        run: |
          echo '--- listing playwright-report ---'
          ls -la playwright-report || true
          echo '--- listing playwright-report/** (glob) ---'
          ls -la playwright-report/** || true
          echo '--- listing test-results ---'
          ls -la test-results || true

      - name: Upload Playwright artifacts
        uses: actions/upload-artifact@v4
        with:
            name: manual-playwright-report
            path: playwright-report/**
            if-no-files-found: warn
            path: test-results/**
