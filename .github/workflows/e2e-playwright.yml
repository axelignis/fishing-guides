name: E2E - Playwright

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [master]

jobs:
  e2e-seeded:
    runs-on: ubuntu-latest
    env:
      GH_PAT: ${{ secrets.GH_PAT }}
    timeout-minutes: 45
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d testdb" 
          --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            pg_isready -h localhost -p 5432 -U postgres && break || sleep 1
          done
        env:
          PGPASSWORD: postgres

      - name: Set DATABASE_URL
        run: echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/testdb?schema=public" >> $GITHUB_ENV

      - name: Run Prisma deploy (db push)
        run: npx prisma db push --accept-data-loss

      - name: Run deterministic seed
        run: |
          set -euo pipefail
          echo "--- seed step debug ---"
          echo "node version:" $(node -v || true)
          echo "npm version:" $(npm -v || true)
          echo "npx version:" $(npx --version || true)
          echo "which tsx:" $(which tsx || true)
          echo "ls -la (repo root):"
          ls -la
          echo "show package.json (first 200 lines):"
          sed -n '1,200p' package.json || true
          echo "attempting to run 'npm run --if-present seed:places'"
          # try npm script if present; --if-present exits 0 when missing
          if npm run -s --if-present seed:places; then
            echo "npm seed:places ran successfully"
          else
            echo "npm seed:places failed; falling back to direct execution"
            echo "running: npx tsx prisma/seed-places.ts"
            npx tsx prisma/seed-places.ts
          fi
          echo "--- seed step complete ---"

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Build Next.js app
        run: |
          set -euo pipefail
          echo "--- starting build ---"
          mkdir -p build-logs
          # capture stdout+stderr to file so we can inspect on failure
          npm run build 2>&1 | tee build-logs/build.log || true
          if [ ${PIPESTATUS[0]} -ne 0 ]; then
            echo "Build failed â€” dumping last 200 lines of build log"
            tail -n 200 build-logs/build.log || true
            exit 1
          fi
          echo "--- build succeeded ---"

      - name: Start Next.js app
        run: |
          NODE_ENV=production npm run start &
          for i in {1..30}; do
            if curl -sS http://localhost:3000 > /dev/null; then
              echo "server ready"; break
            fi
            sleep 1
          done

      - name: Run Playwright tests against seeded DB
        run: npx playwright test --reporter=list --reporter=html --reporter=junit

      - name: Generate Playwright report (show-report)
        run: npx playwright show-report || true

      - name: Upload Playwright artifacts (seeded)
        uses: actions/upload-artifact@v4
        with:
          name: playwright-seeded-report
          path: |
            playwright-report/**
            test-results/**
            playwright-debug-search.png
            playwright-search.png
            playwright-server-fetch.html
            playwright-debug-search.html
            playwright-api-fail.json

      - name: Debug: fetch run jobs JSON (uses GH_PAT)
        if: always()
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          echo "Fetching jobs for this run via Actions API"
          # use GITHUB_RUN_ID provided by GitHub Actions
          if [ -z "${GITHUB_RUN_ID:-}" ]; then
            echo "GITHUB_RUN_ID not set; skipping"
            exit 0
          fi
          curl -sS -H "Authorization: Bearer $GH_PAT" -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs/${GITHUB_RUN_ID}/jobs" > build-logs/run-jobs.json || true
          echo "Saved run jobs to build-logs/run-jobs.json:"
          jq -r '.jobs[] | "- " + .name + " => " + (.conclusion // "null")' build-logs/run-jobs.json || true
  # end of e2e-seeded
